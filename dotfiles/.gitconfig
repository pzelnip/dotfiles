[user]
    name = Adam Parkin
    email = pzelnip@gmail.com

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
[diff]
    renames = copies

[core]
    editor = vim
    pager = less -r
    excludesfile = ~/.gitignore_global

[alias]
    # interactive fixup, see: https://jordanelver.co.uk/blog/2020/06/04/fixing-commits-with-git-commit-fixup-and-git-rebase-autosquash/
    ifixup = "!git log -n 50 --pretty=format:'%h %s' --no-merges | fzf | cut -c -7 | xargs -o git commit --fixup"

    # interactive add
    iadd = "!(  git ls-files --other --modified --exclude-standard ) | fzf | xargs -o git add"

    # view a simplified log
    headlines = log --oneline --no-merges

    co = checkout
    b = branch
    s = status
    d = diff
    sd = !git status && git --no-pager diff

    # cause git to forget or remember a tracked file, allowing changes to skip version control
    # see: http://stackoverflow.com/questions/13630849/git-difference-between-assume-unchanged-and-skip-worktree/13631525#13631525
    amnesia = !sh -c 'git update-index --skip-worktree $0'
    recall = !sh -c 'git update-index --no-skip-worktree $0'

    hp = "!. ~/.githelpers && show_git_head"
    l = "!. ~/.githelpers && pretty_git_log"
    r = !GIT_NO_PAGER=1 git l -30
    la = !git l --all

    fp2 = !sh -c 'git remote | xargs -n 1 git fetch -v --prune $1'
    graph = log --oneline --decorate --graph

    forcepush = push --force-with-lease

    cleanbranches = !sh -c 'git remote | xargs -n 1 git fetch -v --prune $1 && git branch --merged | egrep -v master | egrep -v mainline | egrep -v main | xargs git branch -d'
    ploms = !sh -c 'git checkout master && git pull origin master'
    plom = !sh -c 'git checkout main && git pull origin main'
    ploml = !sh -c 'git checkout mainline && git pull origin mainline'
    plod = !sh -c 'git checkout development && git pull origin development'
    plomsclean = !sh -c 'git ploms && git cleanbranches'
    plomclean = !sh -c 'git plom && git cleanbranches'
    plomlclean = !sh -c 'git ploml && git cleanbranches'
    plodclean = !sh -c 'git plod && git cleanbranches'

    cleangonebranches = "!(git branch -vv | grep ': gone]' |  grep -v '*' | awk '{ print $1; }' | xargs git branch -D)"

    stashdropbecarefulbecausethisisdangerous = !sh -c 'git stash && git stash drop'

[github]
    user = pzelnip

[fetch]
    prune = true

[pull]
    rebase = false

# use iTerms imgcat for image diffing.  See
# https://til.hashrocket.com/posts/tyz3s673co-show-images-on-git-diff
[diff "image"]
    textconv = imgcat

[init]
    defaultBranch = main

# Conditional config for different remotes (useful for work vs personal)
[includeIf "hasconfig:remote.*.url:git@gitlab.com:mycompany/**"]
  path = ~/.gitconfig-mycompany-gitlab
[includeIf "hasconfig:remote.*.url:https://gitlab.com/mycompany/**"]
  path = ~/.gitconfig-mycompany-gitlab
